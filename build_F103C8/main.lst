ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB0:
   1:Core/Src/main.c **** #include <stdint.h>
   2:Core/Src/main.c **** 
   3:Core/Src/main.c **** #define GPIOA_BASE          0x40010800U
   4:Core/Src/main.c **** #define GPIOC_BASE          0x40011000U
   5:Core/Src/main.c **** #define RCC_BASE            0x40021000U
   6:Core/Src/main.c **** 
   7:Core/Src/main.c **** #define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
   8:Core/Src/main.c **** #define GPIOC               ((GPIO_TypeDef *) GPIOC_BASE)
   9:Core/Src/main.c **** #define RCC                 ((RCC_TypeDef *) RCC_BASE)
  10:Core/Src/main.c **** 
  11:Core/Src/main.c **** typedef struct {
  12:Core/Src/main.c ****     volatile uint32_t CRL;
  13:Core/Src/main.c ****     volatile uint32_t CRH;
  14:Core/Src/main.c ****     volatile uint32_t IDR;
  15:Core/Src/main.c ****     volatile uint32_t ODR;
  16:Core/Src/main.c ****     volatile uint32_t BSRR;
  17:Core/Src/main.c ****     volatile uint32_t BRR;
  18:Core/Src/main.c ****     volatile uint32_t LCKR;
  19:Core/Src/main.c **** } GPIO_TypeDef;
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** typedef struct {
  22:Core/Src/main.c ****     volatile uint32_t CR;
  23:Core/Src/main.c ****     volatile uint32_t CFGR;
  24:Core/Src/main.c ****     volatile uint32_t CIR;
  25:Core/Src/main.c ****     volatile uint32_t APB2RSTR;
  26:Core/Src/main.c ****     volatile uint32_t APB1RSTR;
  27:Core/Src/main.c ****     volatile uint32_t AHBENR;
  28:Core/Src/main.c ****     volatile uint32_t APB2ENR;
  29:Core/Src/main.c ****     volatile uint32_t APB1ENR;
  30:Core/Src/main.c ****     volatile uint32_t BDCR;
  31:Core/Src/main.c ****     volatile uint32_t CSR;
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 2


  32:Core/Src/main.c **** } RCC_TypeDef;
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** void delay(uint32_t count) {
  28              		.loc 1 34 28 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 34 28 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  35:Core/Src/main.c ****     for(volatile uint32_t i = 0; i < count; i++);
  37              		.loc 1 35 5 is_stmt 1 view .LVU2
  38              	.LBB2:
  39              		.loc 1 35 9 view .LVU3
  40              		.loc 1 35 27 is_stmt 0 view .LVU4
  41 0002 0023     		movs	r3, #0
  42 0004 0193     		str	r3, [sp, #4]
  43              		.loc 1 35 5 view .LVU5
  44 0006 02E0     		b	.L2
  45              	.L3:
  46              		.loc 1 35 46 is_stmt 1 discriminator 3 view .LVU6
  47 0008 019B     		ldr	r3, [sp, #4]
  48 000a 0133     		adds	r3, r3, #1
  49 000c 0193     		str	r3, [sp, #4]
  50              	.L2:
  51              		.loc 1 35 36 discriminator 1 view .LVU7
  52 000e 019B     		ldr	r3, [sp, #4]
  53 0010 8342     		cmp	r3, r0
  54 0012 F9D3     		bcc	.L3
  55              	.LBE2:
  36:Core/Src/main.c **** }
  56              		.loc 1 36 1 is_stmt 0 view .LVU8
  57 0014 02B0     		add	sp, sp, #8
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 0
  60              		@ sp needed
  61 0016 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE0:
  65              		.section	.text.main,"ax",%progbits
  66              		.align	1
  67              		.global	main
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	main:
  73              	.LFB1:
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** int main(void) {
  74              		.loc 1 38 16 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  79              	.LCFI2:
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 3


  80              		.cfi_def_cfa_offset 32
  81              		.cfi_offset 4, -32
  82              		.cfi_offset 5, -28
  83              		.cfi_offset 6, -24
  84              		.cfi_offset 7, -20
  85              		.cfi_offset 8, -16
  86              		.cfi_offset 9, -12
  87              		.cfi_offset 10, -8
  88              		.cfi_offset 14, -4
  39:Core/Src/main.c ****     // ИНИЦИАЛИЗАЦИЯ
  40:Core/Src/main.c ****     RCC->APB2ENR |= (1 << 2) | (1 << 4); // GPIOA + GPIOC
  89              		.loc 1 40 5 view .LVU10
  90              		.loc 1 40 8 is_stmt 0 view .LVU11
  91 0004 4B4A     		ldr	r2, .L21
  92 0006 9369     		ldr	r3, [r2, #24]
  93              		.loc 1 40 18 view .LVU12
  94 0008 43F01403 		orr	r3, r3, #20
  95 000c 9361     		str	r3, [r2, #24]
  41:Core/Src/main.c ****     GPIOA->CRL = 0x11110000; // PA4-PA7 как выходы
  96              		.loc 1 41 5 is_stmt 1 view .LVU13
  97              		.loc 1 41 16 is_stmt 0 view .LVU14
  98 000e 4A49     		ldr	r1, .L21+4
  99 0010 4A4B     		ldr	r3, .L21+8
 100 0012 0B60     		str	r3, [r1]
  42:Core/Src/main.c ****     GPIOC->CRH = 0x44444444; // PC13 и PC14 как входы
 101              		.loc 1 42 5 is_stmt 1 view .LVU15
 102              		.loc 1 42 16 is_stmt 0 view .LVU16
 103 0014 03F13C53 		add	r3, r3, #788529152
 104 0018 A3F57F23 		sub	r3, r3, #1044480
 105 001c 4FF04432 		mov	r2, #1145324612
 106 0020 5A60     		str	r2, [r3, #4]
  43:Core/Src/main.c ****     
  44:Core/Src/main.c ****     // Подтяжка для кнопок
  45:Core/Src/main.c ****     GPIOC->ODR |= (1 << 13) | (1 << 14);
 107              		.loc 1 45 5 is_stmt 1 view .LVU17
 108              		.loc 1 45 10 is_stmt 0 view .LVU18
 109 0022 DA68     		ldr	r2, [r3, #12]
 110              		.loc 1 45 16 view .LVU19
 111 0024 42F4C042 		orr	r2, r2, #24576
 112 0028 DA60     		str	r2, [r3, #12]
  46:Core/Src/main.c ****     
  47:Core/Src/main.c ****     uint8_t sequence_step = 0;    // 0-4: шаги последовательности
 113              		.loc 1 47 5 is_stmt 1 view .LVU20
 114              	.LVL1:
  48:Core/Src/main.c ****     uint8_t port_mode = 0;        // 0=выход, 1=вход
 115              		.loc 1 48 5 view .LVU21
  49:Core/Src/main.c ****     uint8_t led1_state = 0;       // Состояние LED1
 116              		.loc 1 49 5 view .LVU22
  50:Core/Src/main.c ****     uint8_t last_btn1 = 1;        // PC14
 117              		.loc 1 50 5 view .LVU23
  51:Core/Src/main.c ****     uint8_t last_btn2 = 1;        // PC13
 118              		.loc 1 51 5 view .LVU24
  52:Core/Src/main.c ****     
  53:Core/Src/main.c ****     // НАЧАЛЬНОЕ СОСТОЯНИЕ - все светодиоды выключены
  54:Core/Src/main.c ****     GPIOA->BSRR = (1 << (4+16)) | (1 << (5+16)) | (1 << (6+16)) | (1 << (7+16));
 119              		.loc 1 54 5 view .LVU25
 120              		.loc 1 54 17 is_stmt 0 view .LVU26
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 4


 121 002a 4FF47003 		mov	r3, #15728640
 122 002e 0B61     		str	r3, [r1, #16]
  51:Core/Src/main.c ****     uint8_t last_btn2 = 1;        // PC13
 123              		.loc 1 51 13 view .LVU27
 124 0030 0122     		movs	r2, #1
  50:Core/Src/main.c ****     uint8_t last_btn2 = 1;        // PC13
 125              		.loc 1 50 13 view .LVU28
 126 0032 1646     		mov	r6, r2
  49:Core/Src/main.c ****     uint8_t last_btn1 = 1;        // PC14
 127              		.loc 1 49 13 view .LVU29
 128 0034 4FF00009 		mov	r9, #0
  48:Core/Src/main.c ****     uint8_t led1_state = 0;       // Состояние LED1
 129              		.loc 1 48 13 view .LVU30
 130 0038 C846     		mov	r8, r9
  47:Core/Src/main.c ****     uint8_t port_mode = 0;        // 0=выход, 1=вход
 131              		.loc 1 47 13 view .LVU31
 132 003a 4F46     		mov	r7, r9
 133 003c 3AE0     		b	.L18
 134              	.LVL2:
 135              	.L7:
 136              	.LBB3:
  55:Core/Src/main.c ****     
  56:Core/Src/main.c ****     while(1) {
  57:Core/Src/main.c ****         uint8_t btn1 = !(GPIOC->IDR & (1 << 14)); // Кнопка 1 (PC14)
  58:Core/Src/main.c ****         uint8_t btn2 = !(GPIOC->IDR & (1 << 13)); // Кнопка 2 (PC13)
  59:Core/Src/main.c ****         
  60:Core/Src/main.c ****         // --- КНОПКА 2: Последовательное включение ---
  61:Core/Src/main.c ****         if (btn2 && !last_btn2) {
  62:Core/Src/main.c ****             sequence_step++;
  63:Core/Src/main.c ****             if (sequence_step > 4) {
  64:Core/Src/main.c ****                 sequence_step = 0;
  65:Core/Src/main.c ****                 // При сбросе выключаем ВСЕ светодиоды
  66:Core/Src/main.c ****                 GPIOA->BSRR = (1 << (4+16)) | (1 << (5+16)) | (1 << (6+16)) | (1 << (7+16));
  67:Core/Src/main.c ****             } else {
  68:Core/Src/main.c ****                 // ВКЛЮЧАЕМ только следующий светодиод, не вык
  69:Core/Src/main.c ****                 switch(sequence_step) {
 137              		.loc 1 69 17 is_stmt 1 view .LVU32
 138 003e 7B1E     		subs	r3, r7, #1
 139 0040 032B     		cmp	r3, #3
 140 0042 55D8     		bhi	.L8
 141 0044 DFE803F0 		tbb	[pc, r3]
 142              	.LVL3:
 143              	.L10:
 144 0048 02       		.byte	(.L13-.L10)/2
 145 0049 06       		.byte	(.L12-.L10)/2
 146 004a 0A       		.byte	(.L11-.L10)/2
 147 004b 0E       		.byte	(.L9-.L10)/2
 148              		.p2align 1
 149              	.L13:
  70:Core/Src/main.c ****                     case 1: 
  71:Core/Src/main.c ****                         GPIOA->BSRR = (1 << 4); // +LED1
 150              		.loc 1 71 25 view .LVU33
 151              		.loc 1 71 37 is_stmt 0 view .LVU34
 152 004c 3A4B     		ldr	r3, .L21+4
 153 004e 1022     		movs	r2, #16
 154 0050 1A61     		str	r2, [r3, #16]
  72:Core/Src/main.c ****                         break;
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 5


 155              		.loc 1 72 25 is_stmt 1 view .LVU35
 156 0052 4DE0     		b	.L8
 157              	.L12:
  73:Core/Src/main.c ****                     case 2: 
  74:Core/Src/main.c ****                         GPIOA->BSRR = (1 << 5); // +LED2
 158              		.loc 1 74 25 view .LVU36
 159              		.loc 1 74 37 is_stmt 0 view .LVU37
 160 0054 384B     		ldr	r3, .L21+4
 161 0056 2022     		movs	r2, #32
 162 0058 1A61     		str	r2, [r3, #16]
  75:Core/Src/main.c ****                         break;
 163              		.loc 1 75 25 is_stmt 1 view .LVU38
 164 005a 49E0     		b	.L8
 165              	.L11:
  76:Core/Src/main.c ****                     case 3: 
  77:Core/Src/main.c ****                         GPIOA->BSRR = (1 << 6); // +LED3
 166              		.loc 1 77 25 view .LVU39
 167              		.loc 1 77 37 is_stmt 0 view .LVU40
 168 005c 364B     		ldr	r3, .L21+4
 169 005e 4022     		movs	r2, #64
 170 0060 1A61     		str	r2, [r3, #16]
  78:Core/Src/main.c ****                         break;
 171              		.loc 1 78 25 is_stmt 1 view .LVU41
 172 0062 45E0     		b	.L8
 173              	.L9:
  79:Core/Src/main.c ****                     case 4: 
  80:Core/Src/main.c ****                         GPIOA->BSRR = (1 << 7); // +LED4
 174              		.loc 1 80 25 view .LVU42
 175              		.loc 1 80 37 is_stmt 0 view .LVU43
 176 0064 344B     		ldr	r3, .L21+4
 177 0066 8022     		movs	r2, #128
 178 0068 1A61     		str	r2, [r3, #16]
  81:Core/Src/main.c ****                         break;
 179              		.loc 1 81 25 is_stmt 1 view .LVU44
 180 006a 41E0     		b	.L8
 181              	.LVL4:
 182              	.L16:
  82:Core/Src/main.c ****                 }
  83:Core/Src/main.c ****             }
  84:Core/Src/main.c ****             
  85:Core/Src/main.c ****             delay(100000);
  86:Core/Src/main.c ****         }
  87:Core/Src/main.c ****         
  88:Core/Src/main.c ****         // --- КНОПКА 1: Смена режима порта PC14 ---
  89:Core/Src/main.c ****         if (btn1 && !last_btn1) {
  90:Core/Src/main.c ****             port_mode = !port_mode;
  91:Core/Src/main.c ****             
  92:Core/Src/main.c ****             if (port_mode == 0) {
  93:Core/Src/main.c ****                 // РЕЖИМ ВЫХОДА: PC14 управляет LED1 (PA4)
  94:Core/Src/main.c ****                 GPIOC->CRH = (GPIOC->CRH & ~(0xF << 24)) | (0x3 << 24); // PC14 как выход
  95:Core/Src/main.c ****                 led1_state = !led1_state;
  96:Core/Src/main.c ****                 
  97:Core/Src/main.c ****                 if (led1_state) {
  98:Core/Src/main.c ****                     GPIOC->BSRR = (1 << 14); // Включаем через PC14
  99:Core/Src/main.c ****                     GPIOA->BSRR = (1 << 4);  // Включаем LED1
 100:Core/Src/main.c ****                 } else {
 101:Core/Src/main.c ****                     GPIOC->BSRR = (1 << (14+16)); // Выключаем через PC14
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 6


 183              		.loc 1 101 21 view .LVU45
 184              		.loc 1 101 33 is_stmt 0 view .LVU46
 185 006c 344A     		ldr	r2, .L21+12
 186 006e 4FF08041 		mov	r1, #1073741824
 187 0072 1161     		str	r1, [r2, #16]
 102:Core/Src/main.c ****                     GPIOA->BSRR = (1 << (4+16));  // Выключаем LED1
 188              		.loc 1 102 21 is_stmt 1 view .LVU47
 189              		.loc 1 102 33 is_stmt 0 view .LVU48
 190 0074 A2F50062 		sub	r2, r2, #2048
 191 0078 4FF48011 		mov	r1, #1048576
 192 007c 1161     		str	r1, [r2, #16]
  95:Core/Src/main.c ****                 
 193              		.loc 1 95 28 view .LVU49
 194 007e 9946     		mov	r9, r3
 195 0080 0EE0     		b	.L17
 196              	.LVL5:
 197              	.L15:
 103:Core/Src/main.c ****                 }
 104:Core/Src/main.c ****             } else {
 105:Core/Src/main.c ****                 // РЕЖИМ ВХОДА: PC14 читает кнопку
 106:Core/Src/main.c ****                 GPIOC->CRH = (GPIOC->CRH & ~(0xF << 24)) | (0x8 << 24); // PC14 как вход
 198              		.loc 1 106 17 is_stmt 1 view .LVU50
 199              		.loc 1 106 36 is_stmt 0 view .LVU51
 200 0082 2F4A     		ldr	r2, .L21+12
 201 0084 5368     		ldr	r3, [r2, #4]
 202              		.loc 1 106 42 view .LVU52
 203 0086 23F07063 		bic	r3, r3, #251658240
 204              		.loc 1 106 58 view .LVU53
 205 008a 43F00063 		orr	r3, r3, #134217728
 206              		.loc 1 106 28 view .LVU54
 207 008e 5360     		str	r3, [r2, #4]
 107:Core/Src/main.c ****                 GPIOC->ODR |= (1 << 14); // Подтяжка
 208              		.loc 1 107 17 is_stmt 1 view .LVU55
 209              		.loc 1 107 22 is_stmt 0 view .LVU56
 210 0090 D368     		ldr	r3, [r2, #12]
 211              		.loc 1 107 28 view .LVU57
 212 0092 43F48043 		orr	r3, r3, #16384
 213 0096 D360     		str	r3, [r2, #12]
 108:Core/Src/main.c ****                 
 109:Core/Src/main.c ****                 // Выключаем LED1 при переходе в режим входа
 110:Core/Src/main.c ****                 GPIOA->BSRR = (1 << (4+16));
 214              		.loc 1 110 17 is_stmt 1 view .LVU58
 215              		.loc 1 110 29 is_stmt 0 view .LVU59
 216 0098 274B     		ldr	r3, .L21+4
 217 009a 4FF48012 		mov	r2, #1048576
 218 009e 1A61     		str	r2, [r3, #16]
 219              	.LVL6:
 220              	.L17:
 111:Core/Src/main.c ****             }
 112:Core/Src/main.c ****             
 113:Core/Src/main.c ****             delay(100000);
 221              		.loc 1 113 13 is_stmt 1 view .LVU60
 222 00a0 2848     		ldr	r0, .L21+16
 223 00a2 FFF7FEFF 		bl	delay
 224              	.LVL7:
  90:Core/Src/main.c ****             
 225              		.loc 1 90 23 is_stmt 0 view .LVU61
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 7


 226 00a6 A046     		mov	r8, r4
 227              	.LVL8:
 228              	.L14:
 114:Core/Src/main.c ****         }
 115:Core/Src/main.c ****         
 116:Core/Src/main.c ****         last_btn1 = btn1;
 229              		.loc 1 116 9 is_stmt 1 view .LVU62
 117:Core/Src/main.c ****         last_btn2 = btn2;
 230              		.loc 1 117 9 view .LVU63
 118:Core/Src/main.c ****         delay(10000);
 231              		.loc 1 118 9 view .LVU64
 232 00a8 42F21070 		movw	r0, #10000
 233 00ac FFF7FEFF 		bl	delay
 234              	.LVL9:
 235              	.LBE3:
  56:Core/Src/main.c ****         uint8_t btn1 = !(GPIOC->IDR & (1 << 14)); // Кнопка 1 (PC14)
 236              		.loc 1 56 10 view .LVU65
 237              	.LBB4:
 117:Core/Src/main.c ****         last_btn2 = btn2;
 238              		.loc 1 117 19 is_stmt 0 view .LVU66
 239 00b0 5246     		mov	r2, r10
 116:Core/Src/main.c ****         last_btn2 = btn2;
 240              		.loc 1 116 19 view .LVU67
 241 00b2 2E46     		mov	r6, r5
 242              	.LVL10:
 243              	.L18:
 116:Core/Src/main.c ****         last_btn2 = btn2;
 244              		.loc 1 116 19 view .LVU68
 245              	.LBE4:
  56:Core/Src/main.c ****         uint8_t btn1 = !(GPIOC->IDR & (1 << 14)); // Кнопка 1 (PC14)
 246              		.loc 1 56 5 is_stmt 1 view .LVU69
 247              	.LBB5:
  57:Core/Src/main.c ****         uint8_t btn2 = !(GPIOC->IDR & (1 << 13)); // Кнопка 2 (PC13)
 248              		.loc 1 57 9 view .LVU70
  57:Core/Src/main.c ****         uint8_t btn2 = !(GPIOC->IDR & (1 << 13)); // Кнопка 2 (PC13)
 249              		.loc 1 57 31 is_stmt 0 view .LVU71
 250 00b4 224B     		ldr	r3, .L21+12
 251 00b6 9C68     		ldr	r4, [r3, #8]
  57:Core/Src/main.c ****         uint8_t btn2 = !(GPIOC->IDR & (1 << 13)); // Кнопка 2 (PC13)
 252              		.loc 1 57 24 view .LVU72
 253 00b8 14F48044 		ands	r4, r4, #16384
 254 00bc 0CBF     		ite	eq
 255 00be 0125     		moveq	r5, #1
 256 00c0 0025     		movne	r5, #0
 257              	.LVL11:
  58:Core/Src/main.c ****         
 258              		.loc 1 58 9 is_stmt 1 view .LVU73
  58:Core/Src/main.c ****         
 259              		.loc 1 58 31 is_stmt 0 view .LVU74
 260 00c2 9B68     		ldr	r3, [r3, #8]
  58:Core/Src/main.c ****         
 261              		.loc 1 58 37 view .LVU75
 262 00c4 03F40053 		and	r3, r3, #8192
  58:Core/Src/main.c ****         
 263              		.loc 1 58 24 view .LVU76
 264 00c8 002B     		cmp	r3, #0
 265 00ca 0CBF     		ite	eq
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 8


 266 00cc 4FF0010A 		moveq	r10, #1
 267 00d0 4FF0000A 		movne	r10, #0
 268              	.LVL12:
  61:Core/Src/main.c ****             sequence_step++;
 269              		.loc 1 61 9 is_stmt 1 view .LVU77
  61:Core/Src/main.c ****             sequence_step++;
 270              		.loc 1 61 12 is_stmt 0 view .LVU78
 271 00d4 0FD1     		bne	.L6
  61:Core/Src/main.c ****             sequence_step++;
 272              		.loc 1 61 18 discriminator 1 view .LVU79
 273 00d6 72B9     		cbnz	r2, .L6
  62:Core/Src/main.c ****             if (sequence_step > 4) {
 274              		.loc 1 62 13 is_stmt 1 view .LVU80
  62:Core/Src/main.c ****             if (sequence_step > 4) {
 275              		.loc 1 62 26 is_stmt 0 view .LVU81
 276 00d8 0137     		adds	r7, r7, #1
 277              	.LVL13:
  62:Core/Src/main.c ****             if (sequence_step > 4) {
 278              		.loc 1 62 26 view .LVU82
 279 00da FFB2     		uxtb	r7, r7
 280              	.LVL14:
  63:Core/Src/main.c ****                 sequence_step = 0;
 281              		.loc 1 63 13 is_stmt 1 view .LVU83
  63:Core/Src/main.c ****                 sequence_step = 0;
 282              		.loc 1 63 16 is_stmt 0 view .LVU84
 283 00dc 042F     		cmp	r7, #4
 284 00de AED9     		bls	.L7
  64:Core/Src/main.c ****                 // При сбросе выключаем ВСЕ светодиоды
 285              		.loc 1 64 17 is_stmt 1 view .LVU85
 286              	.LVL15:
  66:Core/Src/main.c ****             } else {
 287              		.loc 1 66 17 view .LVU86
  66:Core/Src/main.c ****             } else {
 288              		.loc 1 66 29 is_stmt 0 view .LVU87
 289 00e0 03F18043 		add	r3, r3, #1073741824
 290 00e4 03F58433 		add	r3, r3, #67584
 291 00e8 4FF47001 		mov	r1, #15728640
 292 00ec 1961     		str	r1, [r3, #16]
  64:Core/Src/main.c ****                 // При сбросе выключаем ВСЕ светодиоды
 293              		.loc 1 64 31 view .LVU88
 294 00ee 1746     		mov	r7, r2
 295              	.LVL16:
 296              	.L8:
  85:Core/Src/main.c ****         }
 297              		.loc 1 85 13 is_stmt 1 view .LVU89
 298 00f0 1448     		ldr	r0, .L21+16
 299 00f2 FFF7FEFF 		bl	delay
 300              	.LVL17:
 301              	.L6:
  89:Core/Src/main.c ****             port_mode = !port_mode;
 302              		.loc 1 89 9 view .LVU90
  89:Core/Src/main.c ****             port_mode = !port_mode;
 303              		.loc 1 89 12 is_stmt 0 view .LVU91
 304 00f6 002C     		cmp	r4, #0
 305 00f8 D6D1     		bne	.L14
  89:Core/Src/main.c ****             port_mode = !port_mode;
 306              		.loc 1 89 18 discriminator 1 view .LVU92
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 9


 307 00fa 002E     		cmp	r6, #0
 308 00fc D4D1     		bne	.L14
  90:Core/Src/main.c ****             
 309              		.loc 1 90 13 is_stmt 1 view .LVU93
  90:Core/Src/main.c ****             
 310              		.loc 1 90 25 is_stmt 0 view .LVU94
 311 00fe 88F00104 		eor	r4, r8, #1
 312              	.LVL18:
  92:Core/Src/main.c ****                 // РЕЖИМ ВЫХОДА: PC14 управляет LED1 (PA4)
 313              		.loc 1 92 13 is_stmt 1 view .LVU95
  92:Core/Src/main.c ****                 // РЕЖИМ ВЫХОДА: PC14 управляет LED1 (PA4)
 314              		.loc 1 92 16 is_stmt 0 view .LVU96
 315 0102 B8F1000F 		cmp	r8, #0
 316 0106 BCD0     		beq	.L15
  94:Core/Src/main.c ****                 led1_state = !led1_state;
 317              		.loc 1 94 17 is_stmt 1 view .LVU97
  94:Core/Src/main.c ****                 led1_state = !led1_state;
 318              		.loc 1 94 36 is_stmt 0 view .LVU98
 319 0108 0D4A     		ldr	r2, .L21+12
 320 010a 5368     		ldr	r3, [r2, #4]
  94:Core/Src/main.c ****                 led1_state = !led1_state;
 321              		.loc 1 94 42 view .LVU99
 322 010c 23F07063 		bic	r3, r3, #251658240
  94:Core/Src/main.c ****                 led1_state = !led1_state;
 323              		.loc 1 94 58 view .LVU100
 324 0110 43F04073 		orr	r3, r3, #50331648
  94:Core/Src/main.c ****                 led1_state = !led1_state;
 325              		.loc 1 94 28 view .LVU101
 326 0114 5360     		str	r3, [r2, #4]
  95:Core/Src/main.c ****                 
 327              		.loc 1 95 17 is_stmt 1 view .LVU102
  95:Core/Src/main.c ****                 
 328              		.loc 1 95 30 is_stmt 0 view .LVU103
 329 0116 89F00103 		eor	r3, r9, #1
 330              	.LVL19:
  97:Core/Src/main.c ****                     GPIOC->BSRR = (1 << 14); // Включаем через PC14
 331              		.loc 1 97 17 is_stmt 1 view .LVU104
  97:Core/Src/main.c ****                     GPIOC->BSRR = (1 << 14); // Включаем через PC14
 332              		.loc 1 97 20 is_stmt 0 view .LVU105
 333 011a B9F1000F 		cmp	r9, #0
 334 011e A5D1     		bne	.L16
  98:Core/Src/main.c ****                     GPIOA->BSRR = (1 << 4);  // Включаем LED1
 335              		.loc 1 98 21 is_stmt 1 view .LVU106
  98:Core/Src/main.c ****                     GPIOA->BSRR = (1 << 4);  // Включаем LED1
 336              		.loc 1 98 33 is_stmt 0 view .LVU107
 337 0120 4FF48041 		mov	r1, #16384
 338 0124 1161     		str	r1, [r2, #16]
  99:Core/Src/main.c ****                 } else {
 339              		.loc 1 99 21 is_stmt 1 view .LVU108
  99:Core/Src/main.c ****                 } else {
 340              		.loc 1 99 33 is_stmt 0 view .LVU109
 341 0126 A2F50062 		sub	r2, r2, #2048
 342 012a 1021     		movs	r1, #16
 343 012c 1161     		str	r1, [r2, #16]
  95:Core/Src/main.c ****                 
 344              		.loc 1 95 28 view .LVU110
 345 012e 9946     		mov	r9, r3
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 10


 346 0130 B6E7     		b	.L17
 347              	.L22:
 348 0132 00BF     		.align	2
 349              	.L21:
 350 0134 00100240 		.word	1073876992
 351 0138 00080140 		.word	1073809408
 352 013c 00001111 		.word	286326784
 353 0140 00100140 		.word	1073811456
 354 0144 A0860100 		.word	100000
 355              	.LBE5:
 356              		.cfi_endproc
 357              	.LFE1:
 359              		.text
 360              	.Letext0:
 361              		.file 2 "D:/Programs/Education/STM32/Tools/Xpack/arm-none-eabi/include/machine/_default_types.h"
 362              		.file 3 "D:/Programs/Education/STM32/Tools/Xpack/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:19     .text.delay:00000000 $t
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:25     .text.delay:00000000 delay
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:66     .text.main:00000000 $t
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:72     .text.main:00000000 main
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:144    .text.main:00000048 $d
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:148    .text.main:0000004c $t
C:\Users\Dmitriy\AppData\Local\Temp\cc8W5coS.s:350    .text.main:00000134 $d

NO UNDEFINED SYMBOLS
